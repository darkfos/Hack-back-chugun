"""initial migrate

Revision ID: c2b84cac356f
Revises: 
Create Date: 2024-12-10 16:36:47.167351

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c2b84cac356f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Courses",
        sa.Column("title_course", sa.String(length=255), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Courses_title_course"),
        "Courses",
        ["title_course"],
        unique=True,
    )
    op.create_table(
        "Hobbies",
        sa.Column("text_hobby", sa.String(length=255), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Hobbies_text_hobby"), "Hobbies", ["text_hobby"], unique=True
    )
    op.create_table(
        "University",
        sa.Column("name_university", sa.String(length=125), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name_university"),
    )
    op.create_table(
        "Users",
        sa.Column("email", sa.String(length=150), nullable=False),
        sa.Column("hashed_password", sa.Text(), nullable=False),
        sa.Column("user_name", sa.String(length=85), nullable=False),
        sa.Column("avatar_url", sa.Text(), nullable=True),
        sa.Column("phone_number", sa.String(length=25), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_Users_email"), "Users", ["email"], unique=True)
    op.create_index(
        op.f("ix_Users_phone_number"), "Users", ["phone_number"], unique=False
    )
    op.create_table(
        "Userstype",
        sa.Column("name_type", sa.String(length=100), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Hobbycourses",
        sa.Column("id_course", sa.Integer(), nullable=False),
        sa.Column("id_hobby", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_course"],
            ["Courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_hobby"],
            ["Hobbies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Portfolio",
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Recommends",
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id_us_ch", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_us_ch"],
            ["Users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Tasks",
        sa.Column("text_task", sa.String(length=255), nullable=False),
        sa.Column("task_literal", sa.JSON(), nullable=True),
        sa.Column("id_course", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_course"],
            ["Courses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_Tasks_text_task"), "Tasks", ["text_task"], unique=False)
    op.create_table(
        "Userhobbies",
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id_hobby", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_hobby"],
            ["Hobbies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Vacancies",
        sa.Column("title_description", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id_user", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Vacancies")
    op.drop_table("Userhobbies")
    op.drop_index(op.f("ix_Tasks_text_task"), table_name="Tasks")
    op.drop_table("Tasks")
    op.drop_table("Recommends")
    op.drop_table("Portfolio")
    op.drop_table("Hobbycourses")
    op.drop_table("Userstype")
    op.drop_index(op.f("ix_Users_phone_number"), table_name="Users")
    op.drop_index(op.f("ix_Users_email"), table_name="Users")
    op.drop_table("Users")
    op.drop_table("University")
    op.drop_index(op.f("ix_Hobbies_text_hobby"), table_name="Hobbies")
    op.drop_table("Hobbies")
    op.drop_index(op.f("ix_Courses_title_course"), table_name="Courses")
    op.drop_table("Courses")
    # ### end Alembic commands ###
